@using DemoBug.Enums;
@model DemoBug.Models.Bug

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Bug</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">
                <ejs-textbox id="title" placeholder="Title" ejs-for="@Model.Title" floatLabelType="Always"></ejs-textbox>
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <ejs-textbox id="description" placeholder="Description" ejs-for="@Model.Description" floatLabelType="Always"></ejs-textbox>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="severity" class="control-label"></label>
                <select asp-for="severity" class="form-control" asp-items="@(new SelectList(Enum.GetValues(typeof(Severity))))"></select>
                <span asp-validation-for="severity" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="AssignedUserId" class="control-label"></label>
                <select asp-for="AssignedUserId" class="form-control" asp-items="ViewBag.AssignedUserId"></select>
                <span asp-validation-for="AssignedUserId" class="text-danger"></span>

            </div>
            <div class="mb-3">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
